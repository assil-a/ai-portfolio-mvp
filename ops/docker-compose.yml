version: '3.8'

services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ai_portfolio
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ../api
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/ai_portfolio
      PORT: 8000
      GITHUB_APP_ID: ${GITHUB_APP_ID:-}
      GITHUB_APP_PRIVATE_KEY: ${GITHUB_APP_PRIVATE_KEY:-}
      GITHUB_WEBHOOK_SECRET: ${GITHUB_WEBHOOK_SECRET:-}
      OAUTH_GITHUB_CLIENT_ID: ${OAUTH_GITHUB_CLIENT_ID:-}
      OAUTH_GITHUB_CLIENT_SECRET: ${OAUTH_GITHUB_CLIENT_SECRET:-}
      CONTRIBUTOR_WINDOW_DAYS: ${CONTRIBUTOR_WINDOW_DAYS:-90}
      ALLOWED_ORGS: ${ALLOWED_ORGS:-}
      ADMIN_BASIC_AUTH_USER: ${ADMIN_BASIC_AUTH_USER:-}
      ADMIN_BASIC_AUTH_PASS: ${ADMIN_BASIC_AUTH_PASS:-}
    ports:
      - "43620:8000"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - ../api:/app
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  web:
    build:
      context: ../web
      dockerfile: Dockerfile
    environment:
      VITE_API_BASE_URL: http://localhost:43620
      VITE_GITHUB_APP_INSTALL_URL: ${VITE_GITHUB_APP_INSTALL_URL:-}
    ports:
      - "45938:4000"
    depends_on:
      - api
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - ../web:/app
      - /app/node_modules
    command: ["npm", "run", "dev", "--", "--host", "0.0.0.0", "--port", "4000"]

volumes:
  postgres_data: